[{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"mlrmini A mini version of mlr. Copyright (C) 2024  Stella Akouete, Sven Morlock, Teresa Rupprecht, Felix Schweikl  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. mlrmini  Copyright (C) 2024  Stella Akouete, Sven Morlock, Teresa Rupprecht, Felix Schweikl This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://advaprogr-2324.github.io/mlrmini/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stella Akouete. Author, maintainer. Sven Morlock. Author. Teresa Rupprecht. Author. Felix Schweikl. Author.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Akouete S, Morlock S, Rupprecht T, Schweikl F (2024). mlrmini: mlrmini. R package version 0.0.1, https://advaprogr-2324.github.io/mlrmini/, https://github.com/AdvaProgR-2324/mlrmini.","code":"@Manual{,   title = {mlrmini: mlrmini},   author = {Stella Akouete and Sven Morlock and Teresa Rupprecht and Felix Schweikl},   year = {2024},   note = {R package version 0.0.1, https://advaprogr-2324.github.io/mlrmini/},   url = {https://github.com/AdvaProgR-2324/mlrmini}, }"},{"path":"https://advaprogr-2324.github.io/mlrmini/index.html","id":"mlrmini","dir":"","previous_headings":"","what":"mlrmini","title":"mlrmini","text":"mlrmini mini-package Machine Learning R. Package website: mlrmini","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/index.html","id":"short-description","dir":"","previous_headings":"","what":"Short description","title":"mlrmini","text":"mlrmini package developed provide simpler consistent way using machine learning algorithms R. allows therefore simplified evaluation optimization algorithms oriented mlr package. Currently supports learners like xgboost, linear models rpart","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"mlrmini","text":"Install last release CRAN: Install development version GitHub:","code":"install.packages(\"mlrmini\") remotes::install_github(\"AdvaProgR-2324/mlrmini\")"},{"path":"https://advaprogr-2324.github.io/mlrmini/index.html","id":"what-chatgpt-says-this-package-is-made-for","dir":"","previous_headings":"","what":"What ChatGPT says this package is made for","title":"mlrmini","text":"realm data, patterns hide, tool emerges, mlrmini, knowledge guide. features rich functions grand, powerhouse , across data land. Ensemble models, dance sync, symphony predictions, room jinx. Preprocessing magic, transforming raw, insights profound, without flaw. Cross-validation, trustworthy guide, Ensuring robustness, standing side. heart machine learning’s domain, mlrmini reigns, excellence sustain. behold, mlrmini, companion true, Mini mighty, enhancing ’s due. world data, let’s venture spin, mlrmini, let learning begin!","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/index.html","id":"defining-an-inducer","dir":"","previous_headings":"Example","what":"defining an Inducer","title":"mlrmini","text":"","code":"library(mlrmini) inducerxgb <- InducerXGBoost(nrounds = 4)"},{"path":"https://advaprogr-2324.github.io/mlrmini/index.html","id":"fitting-a-model","dir":"","previous_headings":"Example","what":"fitting a model","title":"mlrmini","text":"","code":"cars.data <- Dataset(data = cars, target = \"dist\") fitxgb <- fit(inducerxgb, .data = cars.data)"},{"path":"https://advaprogr-2324.github.io/mlrmini/index.html","id":"reviewing-the-results","dir":"","previous_headings":"Example","what":"reviewing the results","title":"mlrmini","text":"","code":"modelObject(fitxgb) fitxgb$modelInfo"},{"path":"https://advaprogr-2324.github.io/mlrmini/index.html","id":"evaluate-the-performance-of-the-model","dir":"","previous_headings":"Example","what":"evaluate the performance of the model","title":"mlrmini","text":"","code":"predictions <- predict(model.xgb, newdata = cars.data) EvaluatorMSE(predictions)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Dataset object — Dataset","title":"Create a Dataset object — Dataset","text":"given named matrix named data.frame Dataset created. user needs specify target covariable/columnname string. Optionally type can set either regression classification. provided target automatically inferred type matrix data.frame.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Dataset object — Dataset","text":"","code":"Dataset(   data,   target,   type = NULL,   name = as.name(deparse(substitute(data), 20)[[1]]) )"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Dataset object — Dataset","text":"data matrix data.frame object relevant data named columns. target string column name data specifying target. type string specifying whether regression classification done. name Name attribute stored internally.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Dataset object — Dataset","text":"object class 'Dataset' attributes 'data' containing actual data data.frame, 'target' name target covariable, 'type' either 'classification' 'regression' 'name'.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Dataset object — Dataset","text":"","code":"cars.data <- Dataset(cars, target = \"dist\")"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Evaluator.html","id":null,"dir":"Reference","previous_headings":"","what":"Build an Evaluator — Evaluator","title":"Build an Evaluator — Evaluator","text":"Build Evaluator object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Evaluator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build an Evaluator — Evaluator","text":"","code":"Evaluator(.name, .configuration = list(), .value = numeric(0), ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Evaluator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build an Evaluator — Evaluator","text":".name name Evaluator provided string. .configuration Optional argument setting configuration. configuration named list. .value value evaluation measure used. ... optional arguments.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Evaluator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build an Evaluator — Evaluator","text":"Evaluator object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorAIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate performance through AIC — EvaluatorAIC","title":"Evaluate performance through AIC — EvaluatorAIC","text":"Evaluate performance ModelLm using Akaike information criterion.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorAIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate performance through AIC — EvaluatorAIC","text":"","code":"EvaluatorAIC(.model)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorAIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate performance through AIC — EvaluatorAIC","text":".model ModelLm object performance measured.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorAIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate performance through AIC — EvaluatorAIC","text":"AIC value fitted model.","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorAIC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate performance through AIC — EvaluatorAIC","text":"","code":"cars.ds <- Dataset(data = cars, target = \"dist\") mod_fit <- fit(InducerLm(), cars.ds, formula = as.formula(\"dist~speed\")) EvaluatorAIC(mod_fit) #> [1] 419.1569"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorAUC.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Area Under The Curve — EvaluatorAUC","title":"Compute Area Under The Curve — EvaluatorAUC","text":"Evaluate performance 'ModelClassification' object binary classification problem using area ROC curve.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorAUC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Area Under The Curve — EvaluatorAUC","text":"","code":"EvaluatorAUC(.prediction, .dataset, .target)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorAUC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Area Under The Curve — EvaluatorAUC","text":".prediction data.frame containing predictions true values columns numeric vector containing predictions. true values encoded 0/1 TRUE/FALSE. predicted values numeric range 0 1. .dataset optional Dataset data.frame object, provided .prediction numeric vector. .target character vector length one, name target variable contained column .dataset","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorAUC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Area Under The Curve — EvaluatorAUC","text":"","code":"x <- data.frame(var1 = c(1, 2, 3, 4, 5, 6, 7), target = c(1, 1, 1, 1, 0, 1, 0)) predictions <- c(1) EvaluatorAUC(predictions, x, \"target\") #> Area under the curve: 0.5 predictions <- data.frame(prediction = c(0.8, 0.2, 0.6, 0.8, 0.8), truth = c(1, 0, 1, 1, 1)) EvaluatorAUC(predictions) #> Area under the curve: 1 predictions <- data.frame(prediction = c(0.8, 0.2, 0.6, 0.8, 0.8), truth = c(TRUE, FALSE, TRUE, TRUE, TRUE)) EvaluatorAUC(predictions) #> Area under the curve: 1"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorAccuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Accuracy of a Classifier — EvaluatorAccuracy","title":"Compute Accuracy of a Classifier — EvaluatorAccuracy","text":"Evaluate performance ModelClassification object binary classification problem using Accuracy. Accuracy computed number correctly classified observations divided total number observations.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorAccuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Accuracy of a Classifier — EvaluatorAccuracy","text":"","code":"EvaluatorAccuracy(.prediction, .dataset, .target, .threshold = 0.5)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorAccuracy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Accuracy of a Classifier — EvaluatorAccuracy","text":".prediction data.frame containing predictions true values columns numeric vector containing predictions. true values encoded 0/1 TRUE/FALSE. predicted values numeric range 0 1. .dataset optional Dataset data.frame object, provided .prediction numeric vector. .target character vector length one, name target variable contained column .dataset .threshold optional argument setting threshold prediction gets assigned class.","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorAccuracy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Accuracy of a Classifier — EvaluatorAccuracy","text":"","code":"x <- data.frame(var1 = c(1, 2, 3, 4, 5, 6, 7), target = c(1, 1, 1, 1, 0, 1, 0)) predictions <- c(1) EvaluatorAccuracy(predictions, x, \"target\") #> [1] 0.7142857 predictions <- data.frame(prediction = c(0.8, 0.2, 0.6, 0.8, 0.8), truth = c(1, 0, 1, 1, 1)) EvaluatorAccuracy(predictions) #> [1] 1 EvaluatorAccuracy(.prediction = predictions, .threshold = 0.7) #> [1] 0.8"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorBIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate performance through BIC — EvaluatorBIC","title":"Evaluate performance through BIC — EvaluatorBIC","text":"Evaluate performance ModelLm using Bayesian information criterion.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorBIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate performance through BIC — EvaluatorBIC","text":"","code":"EvaluatorBIC(.model)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorBIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate performance through BIC — EvaluatorBIC","text":".model ModelLm object performance measured.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorBIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate performance through BIC — EvaluatorBIC","text":"BIC value fitted model.","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorBIC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate performance through BIC — EvaluatorBIC","text":"","code":"cars.ds <- Dataset(data = cars, target = \"dist\") mod_fit <- fit(InducerLm(), cars.ds, formula = as.formula(\"dist~speed\")) EvaluatorBIC(mod_fit) #> [1] 424.8929"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorMAE.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate Predictions using the Mean Absolute Error — EvaluatorMAE","title":"Evaluate Predictions using the Mean Absolute Error — EvaluatorMAE","text":"Compute mean absolute error predictions model.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorMAE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate Predictions using the Mean Absolute Error — EvaluatorMAE","text":"","code":"EvaluatorMAE(.prediction, .data, .target)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorMAE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate Predictions using the Mean Absolute Error — EvaluatorMAE","text":".prediction data.frame object containing predictions model. columns contain predictions true values. predictions handed , true values target variable handed .data argument name variable handed .target. .data Optional argument, provided predictions handed .prediction, .data data.frame contains true values. .target predictions handed .prediction, .target set name target variable predicted, handed character length 1.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorMAE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate Predictions using the Mean Absolute Error — EvaluatorMAE","text":"mean absolute error predictions.","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorMAE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate Predictions using the Mean Absolute Error — EvaluatorMAE","text":"","code":"x <- data.frame(var1 = c(1, 1, 1, 1, 0), target = c(1, 2, 3, 4, 5)) predictions <- c(3) EvaluatorMAE(predictions, x, \"target\") #> [1] 1.2 predictions <- data.frame(prediction = c(1.3, 2.5, 2.6, 3.5, 4.5), truth = c(1, 2, 3, 4, 5)) EvaluatorMAE(predictions) #> [1] 0.44"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorMSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate predictions using the Mean Squared Error — EvaluatorMSE","title":"Evaluate predictions using the Mean Squared Error — EvaluatorMSE","text":"Compute mean squared error predictions model. binary classification corresponds Brier-Score.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorMSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate predictions using the Mean Squared Error — EvaluatorMSE","text":"","code":"EvaluatorMSE(.prediction, .data, .target)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorMSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate predictions using the Mean Squared Error — EvaluatorMSE","text":".prediction data.frame object containing predictions model. columns contain predictions true values. predictions handed , true values target variable handed .data name target variable .target argument. .data Optional argument, provided predictions handed .prediction, .data data.frame contains true values. .target predictions handed .prediction, .target handed character. length 1 name target variable.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorMSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate predictions using the Mean Squared Error — EvaluatorMSE","text":"mean squared error predictions.","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/EvaluatorMSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate predictions using the Mean Squared Error — EvaluatorMSE","text":"","code":"x <- data.frame(var1 = c(1, 1, 1, 1, 0), target = c(1, 2, 3, 4, 5)) predictions <- c(3) EvaluatorMSE(predictions, x, \"target\") #> [1] 2 predictions <- data.frame(prediction = c(1.3, 2.5, 2.6, 3.5, 4.5), truth = c(1, 2, 3, 4, 5)) EvaluatorMSE(predictions) #> [1] 0.2"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerLm.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create an object of class InducerLm — InducerLm","title":"Function to create an object of class InducerLm — InducerLm","text":".data empty InducerLm object created. .data Dataset object LM model fitted","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerLm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create an object of class InducerLm — InducerLm","text":"","code":"InducerLm(   .data = NULL,   formula,   subset,   weights,   na.action,   method = \"qr\",   model = TRUE,   x = FALSE,   y = FALSE,   qr = TRUE,   singular.ok = TRUE,   offset )"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerLm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create an object of class InducerLm — InducerLm","text":".data data object class Dataset. formula formula used linear model. subset optional argument. vector specifying subset observations used fitting model. weights optional argument. vector weights used fitting model. na.action optional argument. function specifies handle missing values. method method used fitting. information see lm model true model returned x true x returned y true y returned qr true QR decomposition returned singular.ok logical. FALSE (default S R) singular fit error offset can used specify priori known component included linear predictor fitting.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerLm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create an object of class InducerLm — InducerLm","text":"InducerLm object","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerLm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create an object of class InducerLm — InducerLm","text":"","code":"cars.data <- Dataset(data = cars, target = \"dist\") inducer <- InducerLm()"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerRpart.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create an object of class InducerRpart — InducerRpart","title":"Function to create an object of class InducerRpart — InducerRpart","text":".data empty InducerRpart object created. .data Dataset object rpart model fitted.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerRpart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create an object of class InducerRpart — InducerRpart","text":"","code":"InducerRpart(   .data = NULL,   formula,   weights,   subset,   na.action = \"na.rpart\",   method,   model = FALSE,   x = FALSE,   y = TRUE,   parms,   control,   cost )"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerRpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create an object of class InducerRpart — InducerRpart","text":".data data object class Dataset formula formula, response interaction terms. data frame, taken model frame weights optional case weights. subset optional expression saying subset rows data used fit. na.action default action deletes observations y missing, keeps one predictors missing. method one \"anova\", \"poisson\", \"class\" \"exp\". method missing routine tries make intelligent guess model logical: keep copy model frame result? input value model model frame x keep copy x matrix result. y keep copy dependent variable result. missing model supplied defaults FALSE. parms optional parameters splitting function. control list options control details rpart algorithm cost vector non-negative costs, one variable model. Defaults one variables","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerRpart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create an object of class InducerRpart — InducerRpart","text":"InducerRpart object","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerRpart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create an object of class InducerRpart — InducerRpart","text":"","code":"inducer <- InducerRpart() inducer #> Inducer: rpart #> Configuration:  formula = , weights = , subset = , na.action = na.rpart, method = , model = FALSE, x = FALSE, y = TRUE, parms = , control = , cost =  cars.data <- Dataset(data = cars, target = \"dist\") fittedInd <- InducerRpart(.data = cars.data) #> Error in na.rpart(structure(list(dist = c(2, 10, 4, 22, 16, 10, 18, 26, 34, 17, 28, 14, 20, 24, 28, 26, 34, 34, 46, 26, 36, 60, 80, 20, 26, 54, 32, 40, 32, 40, 50, 42, 56, 76, 84, 36, 46, 68, 32, 48, 52, 56, 64, 66, 54, 70, 92, 93, 120, 85), speed = c(4, 4, 7, 7, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 16, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 20, 20, 20, 20, 20, 22, 23, 24, 24, 24, 24, 25)), class = \"data.frame\", row.names = c(NA, 50L), terms = dist ~ speed)): could not find function \"na.rpart\" fittedInd #> Error in eval(expr, envir, enclos): object 'fittedInd' not found"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerXGBoost.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create an object of class InducerXGBoost — InducerXGBoost","title":"Function to create an object of class InducerXGBoost — InducerXGBoost","text":".data empty InducerXGBoost object created. .data Dataset object xgboost model fitted","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerXGBoost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create an object of class InducerXGBoost — InducerXGBoost","text":"","code":"InducerXGBoost(   .data = NULL,   nrounds = 1,   eta = 0.3,   gamma = 0,   max_depth = 6,   min_child_weight = 1,   subsample = 1,   colsample_bytree = 1,   lambda = 1,   alpha = 0,   num_parallel_tree = 1 )"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerXGBoost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create an object of class InducerXGBoost — InducerXGBoost","text":".data Data object class Dataset. nrounds number rounds eta eta value gamma gamma max_depth max depth paramater min_child_weight min child weight paramater subsample subsample paramater colsample_bytree colsample paramater lambda lambda paramater alpha alpha paramater num_parallel_tree number parallel tree paramater","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerXGBoost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create an object of class InducerXGBoost — InducerXGBoost","text":"InducerXGBoost object","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/InducerXGBoost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create an object of class InducerXGBoost — InducerXGBoost","text":"","code":"inducer <- InducerXGBoost() inducer #> Inducer: XGBoost #> Configuration:  nrounds = 1, eta = 0.3, gamma = 0, max_depth = 6, min_child_weight = 1, subsample = 1, colsample_bytree = 1, lambda = 1, alpha = 0, num_parallel_tree = 1 cars.data <- Dataset(data = cars, target = \"dist\") fittedInd <- InducerXGBoost(.data = cars.data) #> [1]\ttrain-rmse:37.257189  fittedInd #> Regression Model: \"InducerXGBoost\" fitted on \"cars\" dataset."},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Model object — Model","title":"Create a Model object — Model","text":"Create Model object given dataset inducer.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Model object — Model","text":"","code":"Model(   inducer.name,   inducer.configuration,   data.name,   data.target,   data.features,   fitted.values = NULL,   coefficients = NULL,   modelInfo = NULL,   model.out,   model.data )"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Model object — Model","text":"inducer.name name inducer inducer.configuration configuration Inducer data.name name Dataset used model. data.target name target variable. data.features name features. fitted.values fitted values model. coefficients coefficients model modelInfo Info model. model.model output. model.data data model.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Split.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Split object hosting available resampling strategies — Split","title":"Create a Split object hosting available resampling strategies — Split","text":"function just creates environment predefined resampling strategies.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Split object hosting available resampling strategies — Split","text":"","code":"Split()"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/Split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Split object hosting available resampling strategies — Split","text":"environment class Split.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/SplitCV.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SplitCV object — SplitCV","title":"Create a SplitCV object — SplitCV","text":"Split object implementing resampling strategy K-Fold CV.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/SplitCV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SplitCV object — SplitCV","text":"","code":"SplitCV(folds, repeats = 1)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/SplitCV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SplitCV object — SplitCV","text":"folds Integer number [2, Inf) repeats Integer number [1, Inf)","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/as.data.frame.Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data.frame object from a Dataset object — as.data.frame.Dataset","title":"Create a data.frame object from a Dataset object — as.data.frame.Dataset","text":"function returns actual data Dataset data.frame. Additional information associated Dataset neglected.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/as.data.frame.Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data.frame object from a Dataset object — as.data.frame.Dataset","text":"","code":"# S3 method for Dataset as.data.frame(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/as.data.frame.Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data.frame object from a Dataset object — as.data.frame.Dataset","text":"x Dataset object. ... Additional arguments","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/as.data.frame.Dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data.frame object from a Dataset object — as.data.frame.Dataset","text":"data.frame actual data original Dataset.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/as.data.frame.Dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data.frame object from a Dataset object — as.data.frame.Dataset","text":"","code":"cars.data <- Dataset(cars, target = \"dist\") as.data.frame(cars.data) #>    speed dist #> 1      4    2 #> 2      4   10 #> 3      7    4 #> 4      7   22 #> 5      8   16 #> 6      9   10 #> 7     10   18 #> 8     10   26 #> 9     10   34 #> 10    11   17 #> 11    11   28 #> 12    12   14 #> 13    12   20 #> 14    12   24 #> 15    12   28 #> 16    13   26 #> 17    13   34 #> 18    13   34 #> 19    13   46 #> 20    14   26 #> 21    14   36 #> 22    14   60 #> 23    14   80 #> 24    15   20 #> 25    15   26 #> 26    15   54 #> 27    16   32 #> 28    16   40 #> 29    17   32 #> 30    17   40 #> 31    17   50 #> 32    18   42 #> 33    18   56 #> 34    18   76 #> 35    18   84 #> 36    19   36 #> 37    19   46 #> 38    19   68 #> 39    20   32 #> 40    20   48 #> 41    20   52 #> 42    20   56 #> 43    20   64 #> 44    22   66 #> 45    23   54 #> 46    24   70 #> 47    24   92 #> 48    24   93 #> 49    24  120 #> 50    25   85"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/configuration-set.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method configuration<- for class 'InducerLm' — configuration<-","title":"S3 method configuration<- for class 'InducerLm' — configuration<-","text":"Change configuration inducer object","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/configuration-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method configuration<- for class 'InducerLm' — configuration<-","text":"","code":"configuration(.inducer) <- value"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/configuration-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method configuration<- for class 'InducerLm' — configuration<-","text":".inducer Inducer object value value changing configuration","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/configuration-set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method configuration<- for class 'InducerLm' — configuration<-","text":"","code":"inducer <- InducerLm() inducer #> Inducer: lm #> Configuration:  formula = , subset = , weights = , na.action = , method = qr, model = TRUE, x = FALSE, y = FALSE, qr = TRUE, singular.ok = TRUE, offset =  configuration(inducer)$x <- TRUE"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/configuration.Inducer.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method configuration for class inducer — configuration.Inducer","title":"S3 method configuration for class inducer — configuration.Inducer","text":"Get configuration inducer object","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/configuration.Inducer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method configuration for class inducer — configuration.Inducer","text":"","code":"# S3 method for Inducer configuration(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/configuration.Inducer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method configuration for class inducer — configuration.Inducer","text":"x Inducer object ... arguments","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/configuration.Inducer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method configuration for class inducer — configuration.Inducer","text":"","code":"inducer <- InducerXGBoost() configuration(inducer) #> $.data #> NULL #>  #> $nrounds #> [1] 1 #>  #> $eta #> [1] 0.3 #>  #> $gamma #> [1] 0 #>  #> $max_depth #> [1] 6 #>  #> $min_child_weight #> [1] 1 #>  #> $subsample #> [1] 1 #>  #> $colsample_bytree #> [1] 1 #>  #> $lambda #> [1] 1 #>  #> $alpha #> [1] 0 #>  #> $num_parallel_tree #> [1] 1 #>"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/configuration.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method configuration — configuration","title":"S3 method configuration — configuration","text":"configuration gets configuration given object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/configuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method configuration — configuration","text":"","code":"configuration(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/configuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method configuration — configuration","text":"x object configuration returned. ... Optional arguments passed methods.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/configuration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method configuration — configuration","text":"configuration object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerLm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a Model using InducerLm — fit.InducerLm","title":"Fit a Model using InducerLm — fit.InducerLm","text":"Fit linear model provided data.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerLm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a Model using InducerLm — fit.InducerLm","text":"","code":"# S3 method for InducerLm fit(   .inducer,   .data,   formula,   subset,   weights,   na.action,   method = \"qr\",   model = TRUE,   x = FALSE,   y = FALSE,   qr = TRUE,   singular.ok = TRUE,   offset,   ... )"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerLm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a Model using InducerLm — fit.InducerLm","text":".inducer InducerLm object. Inducer used fitting. .data data model fitted, provided Dataset object. formula object class formula. optional parameter setting formula argument InducerLm object. subset optional argument. vector specifying subset observations used fitting model. weights optional argument. vector weights used fitting model. na.action optional argument. function specifies handle missing values. method method used fitting. information see lm model true model returned x true x returned y true y returned qr true QR decomposition returned singular.ok logical. FALSE (default S R) singular fit error offset can used specify priori known component included linear predictor fitting. ... arguments","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerLm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a Model using InducerLm — fit.InducerLm","text":"object class ModelLm.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerLm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a Model using InducerLm — fit.InducerLm","text":"","code":"cars.data <- Dataset(data = cars, target = \"dist\") inducer <- InducerLm() lmfit <- fit.InducerLm(.inducer = inducer, .data = cars.data) #> Error in fit.InducerLm(.inducer = inducer, .data = cars.data): could not find function \"fit.InducerLm\""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerRpart.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a Model using InducerRpart — fit.InducerRpart","title":"Fit a Model using InducerRpart — fit.InducerRpart","text":"Fit rpart model provided data.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerRpart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a Model using InducerRpart — fit.InducerRpart","text":"","code":"# S3 method for InducerRpart fit(   .inducer,   .data,   formula,   weights,   subset,   na.action = \"na.rpart\",   method,   model = FALSE,   x = FALSE,   y = TRUE,   parms,   control,   cost,   ... )"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerRpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a Model using InducerRpart — fit.InducerRpart","text":".inducer InducerRpart object. Inducer used fitting. .data data model fitted, provided Dataset object. formula optional parameter setting formula argument InducerRpart object. weights optional case weights. subset optional expression saying subset rows data used fit. na.action default action deletes observations y missing, keeps one predictors missing. method one \"anova\", \"poisson\", \"class\" \"exp\". method missing routine tries make intelligent guess model logical: keep copy model frame result? input value model model frame x keep copy x matrix result. y keep copy dependent variable result. missing model supplied defaults FALSE. parms optional parameters splitting function. control list options control details rpart algorithm cost vector non-negative costs, one variable model. Defaults one variables ... arguments","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerRpart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a Model using InducerRpart — fit.InducerRpart","text":"object class InducerRpart.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerRpart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a Model using InducerRpart — fit.InducerRpart","text":"","code":"cars.data <- Dataset(data = cars, target = \"dist\") inducer <- InducerRpart() lmfit <- fit.InducerRpart(.inducer = inducer, .data = cars.data) #> Error in fit.InducerRpart(.inducer = inducer, .data = cars.data): could not find function \"fit.InducerRpart\""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerXGBoost.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit XGBoost model using InducerXGBoost — fit.InducerXGBoost","title":"Fit XGBoost model using InducerXGBoost — fit.InducerXGBoost","text":"Fit linear model provided data.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerXGBoost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit XGBoost model using InducerXGBoost — fit.InducerXGBoost","text":"","code":"# S3 method for InducerXGBoost fit(   .inducer,   .data = NULL,   nrounds = 1,   eta = 0.3,   gamma = 0,   max_depth = 6,   min_child_weight = 1,   subsample = 1,   colsample_bytree = 1,   lambda = 1,   alpha = 0,   num_parallel_tree = 1,   ... )"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerXGBoost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit XGBoost model using InducerXGBoost — fit.InducerXGBoost","text":".inducer InducerXGBoost object .data data model fitted, provided Dataset object. nrounds number rounds eta eta value gamma gamma max_depth max depth paramater min_child_weight min child weight paramater subsample subsample paramater colsample_bytree colsample paramater lambda lambda paramater alpha alpha paramater num_parallel_tree number parallel tree paramater ... args","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerXGBoost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit XGBoost model using InducerXGBoost — fit.InducerXGBoost","text":"object class InducerXGBoost.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.InducerXGBoost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit XGBoost model using InducerXGBoost — fit.InducerXGBoost","text":"","code":"inducer <- InducerXGBoost() inducer #> Inducer: XGBoost #> Configuration:  nrounds = 1, eta = 0.3, gamma = 0, max_depth = 6, min_child_weight = 1, subsample = 1, colsample_bytree = 1, lambda = 1, alpha = 0, num_parallel_tree = 1 cars.data <- Dataset(data = cars, target = \"dist\") fittedmod <- fit.InducerXGBoost(.inducer = inducer, .data = cars.data) #> Error in fit.InducerXGBoost(.inducer = inducer, .data = cars.data): could not find function \"fit.InducerXGBoost\" fittedmod #> Error in eval(expr, envir, enclos): object 'fittedmod' not found"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method fit — fit","title":"S3 method fit — fit","text":"fit fits model given data.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method fit — fit","text":"","code":"fit(.inducer, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method fit — fit","text":".inducer inducer used model fitting. ... Optional arguments passed methods.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method fit — fit","text":"fitted model.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/hp.html","id":null,"dir":"Reference","previous_headings":"","what":"Hyperparameter\nThis function return the name, type and range of hyperparameters — hp","title":"Hyperparameter\nThis function return the name, type and range of hyperparameters — hp","text":"Hyperparameter function return name, type range hyperparameters","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/hp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hyperparameter\nThis function return the name, type and range of hyperparameters — hp","text":"","code":"hp(...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/hp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hyperparameter\nThis function return the name, type and range of hyperparameters — hp","text":"... optional arguments","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/hp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hyperparameter\nThis function return the name, type and range of hyperparameters — hp","text":"function return name, type range hyperparameters","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/hyperparameters.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method hyperparameters — hyperparameters","title":"S3 method hyperparameters — hyperparameters","text":"hyperparameters gets possible hyperparameter values object. Get Hyperparameters inducer.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/hyperparameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method hyperparameters — hyperparameters","text":"","code":"hyperparameters(x, ...)  hyperparameters(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/hyperparameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method hyperparameters — hyperparameters","text":"x object class Inducer. ... Optional arguments.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/hyperparameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method hyperparameters — hyperparameters","text":"configuration object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/inducer2Env.html","id":null,"dir":"Reference","previous_headings":"","what":"Add new inducer to environment — inducer2Env","title":"Add new inducer to environment — inducer2Env","text":"Add new inducer environment","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/inducer2Env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add new inducer to environment — inducer2Env","text":"","code":"inducer2Env(.inducer)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/inducer2Env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add new inducer to environment — inducer2Env","text":".inducer object class Inducer.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/inducer2Env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add new inducer to environment — inducer2Env","text":"nothing, environment inducers","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/metainfo.Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the meta Information of a dataset — metainfo.Dataset","title":"Print the meta Information of a dataset — metainfo.Dataset","text":"Print meta Information dataset","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/metainfo.Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the meta Information of a dataset — metainfo.Dataset","text":"","code":"# S3 method for Dataset metainfo(   data,   targets = data$target,   type = data$type,   name = as.name(deparse(substitute(data), 20)[[1]]),   features = data$features,   ... )"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/metainfo.Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the meta Information of a dataset — metainfo.Dataset","text":"data dataset targets target variable dataset type Regression Classification name name features features ... optional arguments -","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/metainfo.Dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the meta Information of a dataset — metainfo.Dataset","text":"prints neccessary information","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/metainfo.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method metainfo — metainfo","title":"S3 method metainfo — metainfo","text":"Get information object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/metainfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method metainfo — metainfo","text":"","code":"metainfo(...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/metainfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method metainfo — metainfo","text":"... Optional arguments passed methods.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/metainfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method metainfo — metainfo","text":"metainfo object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/mlrmini-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlrmini: mlrmini — mlrmini-package","title":"mlrmini: mlrmini — mlrmini-package","text":"package machine learning R.","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/mlrmini-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlrmini: mlrmini — mlrmini-package","text":"Maintainer: Stella Akouete s.akouete@campus.lmu.de Authors: Sven Morlock svenmauricemorlock@yahoo.com Teresa Rupprecht teresa.rupprecht@campus.lmu.de Felix Schweikl f.schweikl@campus.lmu.de","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelInfo.Model.html","id":null,"dir":"Reference","previous_headings":"","what":"modelInfo: print out info of a model — modelInfo.Model","title":"modelInfo: print out info of a model — modelInfo.Model","text":"print model info model","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelInfo.Model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"modelInfo: print out info of a model — modelInfo.Model","text":"","code":"# S3 method for Model modelInfo(model, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelInfo.Model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"modelInfo: print out info of a model — modelInfo.Model","text":"model Model object. ... arguments","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelInfo.Model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"modelInfo: print out info of a model — modelInfo.Model","text":"","code":"inducer <- InducerXGBoost() cars.data <- Dataset(data = cars, target = \"dist\") fittedmod <- fit.InducerXGBoost(.inducer = inducer, .data = cars.data) #> Error in fit.InducerXGBoost(.inducer = inducer, .data = cars.data): could not find function \"fit.InducerXGBoost\" modelInfo.Model(fittedmod) #> Error in modelInfo.Model(fittedmod): could not find function \"modelInfo.Model\""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method modelInfo — modelInfo","title":"S3 method modelInfo — modelInfo","text":"Get additional information Model object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method modelInfo — modelInfo","text":"","code":"modelInfo(model, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method modelInfo — modelInfo","text":"model model information obtained. ... Optional arguments passed methods.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method modelInfo — modelInfo","text":"information provided Model object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelObject.Model.html","id":null,"dir":"Reference","previous_headings":"","what":"modelObject: get the print out of a model — modelObject.Model","title":"modelObject: get the print out of a model — modelObject.Model","text":"print usual output model","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelObject.Model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"modelObject: get the print out of a model — modelObject.Model","text":"","code":"# S3 method for Model modelObject(model, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelObject.Model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"modelObject: get the print out of a model — modelObject.Model","text":"model Model object. ... arguments","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelObject.Model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"modelObject: get the print out of a model — modelObject.Model","text":"","code":"inducer <- InducerXGBoost() cars.data <- Dataset(data = cars, target = \"dist\") fittedmod <- fit.InducerXGBoost(.inducer = inducer, .data = cars.data) #> Error in fit.InducerXGBoost(.inducer = inducer, .data = cars.data): could not find function \"fit.InducerXGBoost\" modelObject.Model(fittedmod) #> Error in modelObject.Model(fittedmod): could not find function \"modelObject.Model\""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelObject.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method modelObject — modelObject","title":"S3 method modelObject — modelObject","text":"Get object generated fitted model.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method modelObject — modelObject","text":"","code":"modelObject(model, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/modelObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method modelObject — modelObject","text":"model model output returned. ... Optional arguments passed methods.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelLm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict values for fit.InducerLm — predict.ModelLm","title":"Predict values for fit.InducerLm — predict.ModelLm","text":"Predict results linear model","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelLm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict values for fit.InducerLm — predict.ModelLm","text":"","code":"# S3 method for ModelLm predict(object, newdata, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelLm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict values for fit.InducerLm — predict.ModelLm","text":"object linear model class ModelLm newdata data class data.frame Dataset ... additional arguments","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelLm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict values for fit.InducerLm — predict.ModelLm","text":"object predictions class numeric data.frame","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelLm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict values for fit.InducerLm — predict.ModelLm","text":"","code":"cars.data <- Dataset(data = cars, target = \"dist\") inducer <- InducerLm() lmfit <- fit.InducerLm(.inducer = inducer, .data = cars.data) #> Error in fit.InducerLm(.inducer = inducer, .data = cars.data): could not find function \"fit.InducerLm\" predict.ModelLm(object = lmfit, newdata = data.frame(speed = 10)) #> Error in predict.ModelLm(object = lmfit, newdata = data.frame(speed = 10)): could not find function \"predict.ModelLm\" predict.ModelLm(object = lmfit, newdata = cars.data[c(1, 2, 3, 4), ]) #> Error in predict.ModelLm(object = lmfit, newdata = cars.data[c(1, 2, 3,     4), ]): could not find function \"predict.ModelLm\""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelRpart.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict values for fit.InducerRpart — predict.ModelRpart","title":"Predict values for fit.InducerRpart — predict.ModelRpart","text":"Predict results rpart model","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelRpart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict values for fit.InducerRpart — predict.ModelRpart","text":"","code":"# S3 method for ModelRpart predict(object, newdata, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelRpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict values for fit.InducerRpart — predict.ModelRpart","text":"object linear model class ModelRpart newdata data class data.frame Dataset ... additional arguments","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelRpart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict values for fit.InducerRpart — predict.ModelRpart","text":"object predictions class numeric data.frame","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelRpart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict values for fit.InducerRpart — predict.ModelRpart","text":"","code":"cars.data <- Dataset(data = cars, target = \"dist\") inducer <- InducerLm() rpartfit <- fit.InducerRpart(.inducer = inducer, .data = cars.data) #> Error in fit.InducerRpart(.inducer = inducer, .data = cars.data): could not find function \"fit.InducerRpart\" predict.ModelRpart(object = rpartfit, newdata = data.frame(speed = 10)) #> Error in predict.ModelRpart(object = rpartfit, newdata = data.frame(speed = 10)): could not find function \"predict.ModelRpart\" predict.ModelRpart(object = rpartfit, newdata = cars.data[c(1, 2, 3, 4), ]) #> Error in predict.ModelRpart(object = rpartfit, newdata = cars.data[c(1,     2, 3, 4), ]): could not find function \"predict.ModelRpart\""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelXGBoost.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict values for fit.InducerXGBoost — predict.ModelXGBoost","title":"Predict values for fit.InducerXGBoost — predict.ModelXGBoost","text":"Predict results xgboost model","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelXGBoost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict values for fit.InducerXGBoost — predict.ModelXGBoost","text":"","code":"# S3 method for ModelXGBoost predict(object, newdata, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelXGBoost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict values for fit.InducerXGBoost — predict.ModelXGBoost","text":"object model class ModelXGBoost newdata data class data.frame Dataset ... arguments","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelXGBoost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict values for fit.InducerXGBoost — predict.ModelXGBoost","text":"fitted values. input data.frame predicted values given back vector class numeric. input dataset like used model, result data.frame predictions true values dataset","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.ModelXGBoost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict values for fit.InducerXGBoost — predict.ModelXGBoost","text":"","code":"cars.data <- Dataset(data = cars, target = \"dist\") inducer <- InducerXGBoost() xgbfit <- fit.InducerXGBoost(.inducer = inducer, .data = cars.data) #> Error in fit.InducerXGBoost(.inducer = inducer, .data = cars.data): could not find function \"fit.InducerXGBoost\" predict.ModelXGBoost(object = xgbfit, newdata = data.frame(speed = 10)) #> Error in predict.ModelXGBoost(object = xgbfit, newdata = data.frame(speed = 10)): could not find function \"predict.ModelXGBoost\" predict.ModelXGBoost(object = xgbfit, newdata = cars.data[c(1, 2, 3, 4), ]) #> Error in predict.ModelXGBoost(object = xgbfit, newdata = cars.data[c(1,     2, 3, 4), ]): could not find function \"predict.ModelXGBoost\""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method predict — predict","title":"S3 method predict — predict","text":"predict predicts value response variable using fitted model.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method predict — predict","text":"","code":"predict(object, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method predict — predict","text":"object fitted model used predicting new data. ... Optional arguments passed methods.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method predict — predict","text":"fitted model.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"A print method for Dataset objects — print.Dataset","title":"A print method for Dataset objects — print.Dataset","text":"Prints first last two rows data along informative text target task.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A print method for Dataset objects — print.Dataset","text":"","code":"# S3 method for Dataset print(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A print method for Dataset objects — print.Dataset","text":"x object class 'Dataset' ... arguments passed function","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.Dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A print method for Dataset objects — print.Dataset","text":"","code":"cars.data <- Dataset(cars, target = \"dist\") print(cars.data) #> Dataset \"cars\", predicting \"dist\" (Regression) #>     speed  dist #>     <num> <num> #>  1:     4     2 #>  2:     4    10 #> ---             #> 49:    24   120 #> 50:    25    85"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.Evaluator.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an Evaluator — print.Evaluator","title":"Print an Evaluator — print.Evaluator","text":"Print method Evaluator object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.Evaluator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an Evaluator — print.Evaluator","text":"","code":"# S3 method for Evaluator print(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.Evaluator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an Evaluator — print.Evaluator","text":"x Evaluator printed. ... optional arguments print function.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorAIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an EvaluatorAIC — print.EvaluatorAIC","title":"Print an EvaluatorAIC — print.EvaluatorAIC","text":"Print EvaluatorAIC object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorAIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an EvaluatorAIC — print.EvaluatorAIC","text":"","code":"# S3 method for EvaluatorAIC print(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorAIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an EvaluatorAIC — print.EvaluatorAIC","text":"x EvaluatorAIC object printed. ... Optional arguments print function","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorAIC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print an EvaluatorAIC — print.EvaluatorAIC","text":"","code":"cars.ds <- Dataset(data = cars, target = \"dist\") mod_fit <- fit(InducerLm(), cars.ds, formula = as.formula(\"dist~speed\")) evaluation <- EvaluatorAIC(mod_fit) print(evaluation) #> [1] 419.1569"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorAUC.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an EvaluatorAUC. — print.EvaluatorAUC","title":"Print an EvaluatorAUC. — print.EvaluatorAUC","text":"Print EvaluatorAUC object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorAUC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an EvaluatorAUC. — print.EvaluatorAUC","text":"","code":"# S3 method for EvaluatorAUC print(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorAUC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an EvaluatorAUC. — print.EvaluatorAUC","text":"x EvaluatorAUC object printed. ... Optional arguments print function","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorAUC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print an EvaluatorAUC. — print.EvaluatorAUC","text":"","code":"x <- data.frame(var1 = c(1, 2, 3, 4, 5, 6, 7), target = c(1, 1, 1, 1, 0, 1, 0)) predictions <- c(1) evaluation <- EvaluatorAUC(predictions, x, \"target\") print(evaluation) #> Area under the curve: 0.5 # or simply evaluation #> Area under the curve: 0.5"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorAccuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an EvaluatorAccuracy — print.EvaluatorAccuracy","title":"Print an EvaluatorAccuracy — print.EvaluatorAccuracy","text":"Print EvaluatorAccuracy object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorAccuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an EvaluatorAccuracy — print.EvaluatorAccuracy","text":"","code":"# S3 method for EvaluatorAccuracy print(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorAccuracy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an EvaluatorAccuracy — print.EvaluatorAccuracy","text":"x EvaluatorAccuracy object printed. ... Optional arguments print function.","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorAccuracy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print an EvaluatorAccuracy — print.EvaluatorAccuracy","text":"","code":"x <- data.frame(var1 = c(1, 2, 3, 4, 5, 6, 7), target = c(1, 1, 1, 1, 0, 1, 0)) predictions <- c(1) evaluation <- EvaluatorAccuracy(predictions, x, \"target\") print(evaluation) #> [1] 0.7142857"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorBIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an EvaluatorBIC — print.EvaluatorBIC","title":"Print an EvaluatorBIC — print.EvaluatorBIC","text":"Print EvaluatorBIC object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorBIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an EvaluatorBIC — print.EvaluatorBIC","text":"","code":"# S3 method for EvaluatorBIC print(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorBIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an EvaluatorBIC — print.EvaluatorBIC","text":"x EvaluatorBIC object printed. ... Optional arguments print function","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorBIC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print an EvaluatorBIC — print.EvaluatorBIC","text":"","code":"cars.ds <- Dataset(data = cars, target = \"dist\") mod_fit <- fit(InducerLm(), cars.ds, formula = as.formula(\"dist~speed\")) evaluation <- EvaluatorBIC(mod_fit) print(evaluation) #> [1] 424.8929"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorMAE.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an EvaluatorMAE. — print.EvaluatorMAE","title":"Print an EvaluatorMAE. — print.EvaluatorMAE","text":"Print EvaluatorMAE object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorMAE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an EvaluatorMAE. — print.EvaluatorMAE","text":"","code":"# S3 method for EvaluatorMAE print(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorMAE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an EvaluatorMAE. — print.EvaluatorMAE","text":"x EvaluatorMAE object printed. ... Optional arguments print function","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorMAE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print an EvaluatorMAE. — print.EvaluatorMAE","text":"","code":"x <- data.frame(var1 = c(1, 1, 1, 1, 0), target = c(1, 2, 3, 4, 5)) predictions <- c(3) evaluation <- EvaluatorMAE(predictions, x, \"target\") print(evaluation) #> [1] 1.2"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorMSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an EvaluatorMSE — print.EvaluatorMSE","title":"Print an EvaluatorMSE — print.EvaluatorMSE","text":"Print EvaluatorMSE object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorMSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an EvaluatorMSE — print.EvaluatorMSE","text":"","code":"# S3 method for EvaluatorMSE print(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorMSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an EvaluatorMSE — print.EvaluatorMSE","text":"x EvaluatorMSE object printed. ... Optional arguments print function","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.EvaluatorMSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print an EvaluatorMSE — print.EvaluatorMSE","text":"","code":"x <- data.frame(var1 = c(1, 1, 1, 1, 0), target = c(1, 2, 3, 4, 5)) predictions <- c(3) evaluation <- EvaluatorMSE(predictions, x, \"target\") print(evaluation) #> [1] 2"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.InducerLm.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method print for class InducerLm — print.InducerLm","title":"S3 method print for class InducerLm — print.InducerLm","text":"Print InducerLm object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.InducerLm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method print for class InducerLm — print.InducerLm","text":"","code":"# S3 method for InducerLm print(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.InducerLm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method print for class InducerLm — print.InducerLm","text":"x object class InducerLm. ... optional arguments print methods.","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.InducerLm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method print for class InducerLm — print.InducerLm","text":"","code":"inducer <- InducerLm() inducer #> Inducer: lm #> Configuration:  formula = , subset = , weights = , na.action = , method = qr, model = TRUE, x = FALSE, y = FALSE, qr = TRUE, singular.ok = TRUE, offset ="},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.InducerRpart.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method print for class InducerRpart — print.InducerRpart","title":"S3 method print for class InducerRpart — print.InducerRpart","text":"Print InducerRpart object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.InducerRpart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method print for class InducerRpart — print.InducerRpart","text":"","code":"# S3 method for InducerRpart print(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.InducerRpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method print for class InducerRpart — print.InducerRpart","text":"x object class InducerRpart ... optional arguments print methods.","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.InducerRpart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method print for class InducerRpart — print.InducerRpart","text":"","code":"inducer <- InducerRpart() inducer #> Inducer: rpart #> Configuration:  formula = , weights = , subset = , na.action = na.rpart, method = , model = FALSE, x = FALSE, y = TRUE, parms = , control = , cost ="},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.InducerXGBoost.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method print for class 'InducerXGBoost' — print.InducerXGBoost","title":"S3 method print for class 'InducerXGBoost' — print.InducerXGBoost","text":"Print InducerXGBoost object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.InducerXGBoost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method print for class 'InducerXGBoost' — print.InducerXGBoost","text":"","code":"# S3 method for InducerXGBoost print(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.InducerXGBoost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method print for class 'InducerXGBoost' — print.InducerXGBoost","text":"x object class InducerXGBoost. ... optional arguments print methods.","code":""},{"path":[]},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.InducerXGBoost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method print for class 'InducerXGBoost' — print.InducerXGBoost","text":"","code":"inducer <- InducerXGBoost() print.InducerXGBoost(inducer) #> Error in print.InducerXGBoost(inducer): could not find function \"print.InducerXGBoost\""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.ModelRegression.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing Regression Models — print.ModelRegression","title":"Printing Regression Models — print.ModelRegression","text":"Print regression model.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.ModelRegression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing Regression Models — print.ModelRegression","text":"","code":"# S3 method for ModelRegression print(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.ModelRegression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing Regression Models — print.ModelRegression","text":"x object class ModelRegression ... arguments","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.ModelRegression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing Regression Models — print.ModelRegression","text":"","code":"inducer <- InducerXGBoost() cars.data <- Dataset(data = cars, target = \"dist\") fittedmod <- fit.InducerXGBoost(.inducer = inducer, .data = cars.data) #> Error in fit.InducerXGBoost(.inducer = inducer, .data = cars.data): could not find function \"fit.InducerXGBoost\" print.ModelRegression(fittedmod) #> Error in print.ModelRegression(fittedmod): could not find function \"print.ModelRegression\""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.SplitInstanceCV.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing a SplitInstanceCV — print.SplitInstanceCV","title":"Printing a SplitInstanceCV — print.SplitInstanceCV","text":"Print information SplitInstanceCV object, including hyperparameters details used Dataset.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.SplitInstanceCV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing a SplitInstanceCV — print.SplitInstanceCV","text":"","code":"# S3 method for SplitInstanceCV print(x, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/print.SplitInstanceCV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing a SplitInstanceCV — print.SplitInstanceCV","text":"x Object class SplitInstanceCV. ... Optional arguments print methods.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/resample.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ResamplePrediction — resample","title":"Create a ResamplePrediction — resample","text":"function creates ResamplePrediction object contains information resampling procedure applied given parameters.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/resample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ResamplePrediction — resample","text":"","code":"resample(.data, ind, splt)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/resample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ResamplePrediction — resample","text":".data Dataset object. ind inducer instance. splt SplitInstance object.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/set_cv_idx.html","id":null,"dir":"Reference","previous_headings":"","what":"Set indices for k-fold CV with repetitions — set_cv_idx","title":"Set indices for k-fold CV with repetitions — set_cv_idx","text":"Internal function set indices resampling.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/set_cv_idx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set indices for k-fold CV with repetitions — set_cv_idx","text":"","code":"set_cv_idx(folds, repeats, n)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/set_cv_idx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set indices for k-fold CV with repetitions — set_cv_idx","text":"folds Integer number foldls. repeats Interger number repetitions. n Integer number observations.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/set_cv_idx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set indices for k-fold CV with repetitions — set_cv_idx","text":"list training validation indices","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/sub-.Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a Dataset Object — [.Dataset","title":"Subset a Dataset Object — [.Dataset","text":"function subsets custom dataset object based specified row indices optional column names. column names specified, defaults using columns. function checks provided column names exist dataset whether include target variable, removed.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/sub-.Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a Dataset Object — [.Dataset","text":"","code":"# S3 method for Dataset [(x, i, j = NULL, ...)"},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/sub-.Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a Dataset Object — [.Dataset","text":"x  Dataset object. row indices nothing. j covariate names nothing. ... arguments passed function","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/sub-.Dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a Dataset Object — [.Dataset","text":"object type 'Dataset.","code":""},{"path":"https://advaprogr-2324.github.io/mlrmini/reference/sub-.Dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset a Dataset Object — [.Dataset","text":"","code":"cars.data <- Dataset(cars, target = \"dist\") cars.data[c(1, 2, 3), \"dist\"] #> Dataset \"cars\", predicting \"dist\" (Regression) #> [1]  2 10  4"},{"path":"https://advaprogr-2324.github.io/mlrmini/news/index.html","id":"mlrmini-001","dir":"Changelog","previous_headings":"","what":"mlrmini 0.0.1","title":"mlrmini 0.0.1","text":"Initial CRAN submission.","code":""}]
